<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAFiAAAAEAIACoCwAAFgAAACgAAAAWAAAAQAAAAAEAIAAAAAAAAAsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAM2uEgDPsh4Az7MhAM6xGgDPsh4A0LQjAM+zIQDPsx8Az7IcANCzIwDPsyAAz7IeAM6x
        HADPsh8A0LQkAM+yHwDPsyEAza8WAMytEQAAAAAAAAAAAAAAAADNrhIb0LMiN9C0JTfOsRw30LMiN9G1
        JzfQtCQ30LQjN8+zHzfQtCU30LQjN8+zITfPsh830LQkN9G1JzfQtCM30LQjN86wFynMrRECAAAAAAAA
        AAAAAAAAza4KXdK3KL/SuC/C0LQewNO4LL/Utyy+07YqvtO5Kr3RtSG90rgtvdK4L77StSi/0LQjwdS5
        ML/UuCq+07covtK3Jb7MrxCOzKoFBgAAAAAAAAAAAAAAAKmKqTuhjoFN2MMcE62HrFuelZd9jrKAg5So
        iYuegKB0pImRdLWYYH6xnm2Sl66HlKmhVyykpqE5fYmulY+RlnOthZJvo4GRhJCUgAkAAAAAAAAAAAAA
        AACYUeyJkWTFoq167EKJMPHhiY6++17Jgf97rqP8ijzp+at5sf3ChSr+uJZJ/3vAkO+ZpKc3U3f0qFR3
        7f96hdr7pF6u8a55tXqptaYFAAAAAAAAAAAAAAAAlEXxe5Va2diUSu3JiTDxy4iQwP9pz4v/e62g9I5C
        6POkZqz/yo85/7iZSf5sw4r8hLecu1F65u1FbfT/c3jb/6BVqPmdfaCJipGHCQAAAAAAAAAAAAAAAJVH
        8XCHMO34n1rwe4Mo7YqLh77PcdGGqo6YuZuPRueXnmekkcWUPJ6/rGl8cc2OoHHLhq94p9JzUnvlqoOA
        1p6uW5zFsXaoc6OroAcAAAAAAAAAAAAAAAClY/M5mk/yX9rA+QeAJO5Lh3aeWmKzFYhfsRKXX7YQfV20
        EotetBleXbMXSGOyGHtgsRaiYbMQVGC0FImfsitY6sFz1Oi8YGOcpZgAAAAAAAAAAAAAAAAAdhHuAHMK
        7gDHn/cAcgvlAFu0DCFesBVhXrAVNly2DD1bvAU5WMMAIluzDF5csBFjXrAUPmCxGUFeshlDrKciI+Ow
        ToThrkg8AAAAAAAAAAAAAAAAAAAAAP/+/QD//v0AAAAAAJZV8QBgwA0BfZtdBValDwCUAP8jkQT2TY8I
        8EaNFeIl6QD/AW9zYgBWqgkAAIUAAJ+qIgD+9/MA68uMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACuWvEAmBvxBZog7yOPC+1IjwrtepAM7UyOCu1ajgntgY4J7XmPDO0jiQjmAHKhRgD/mEAA36Y0AN6l
        MgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjwztAJEO7SqQDu1yjwrtfJMT7RGWGe0rkhLtFpgg
        7wSPCu0+jgntiY8M7TOKA+0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0JL0AJIR
        7giOCe2Ijwrtpo8L7SyXHe4gkxTtL48L7XaPC+1YkQ7tGo8M7iGOCu1+kA3tIZEO7QAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAI8L7QCOCO1KjQftzo8L7XyVF+4KkhHtTpcc7gSRDu0QjwvtRpAM
        7WqUFeRLjw3wNo8L7mqSEO0HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWGO4FjAXto44J
        7cWPDO06khDtGZAN7ViZHu4AkQ/tAI0H7QCUFO0FuVlzVsBoWHqREOxSkQ7tMAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAkA3tHYwF7cuPDO2XkhHtDpAN7TeQDe1P2pgLANiTCADYlAsAuFh+AN6f
        ABjXkgmvsEmPTI8M9D0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI4J7TiMBu3KkhHtWgAA
        rgCPC+1YjgrxOd6eAwvYlAxD2ZUNMNmWEgTbmx4E2ZQCoblZcHGKBf0dAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACNB+1GjQbts5kg7heTFO0EjgrueJkhziDZlQZy2JQLa9mVDVvZlQ5F3J4mAtiS
        B5bFcVNPbgD/AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjgjtP40G7aicJ+8EjwvtOowG
        83HXkRFJ2JQKd9mVDmTZlhAj2pgWNdmXEw/YkwmE2ZYRFnoA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAI8M7SCNB+2jlRjtLI8M7mO3VnhE2ZcMidmWEGDZlQ5k2ZUQWN6lNAbamhsj2ZYRQt+i
        DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTFO0EjgntgJAN7TCWG/MDtVOJP8+E
        NDzmrgAP2pcQOdqYFzbdnygE25seI9mWEEvZlhEFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAkQ7tAJMT7UiRD+1Qlx3vAI4K8VuNB/ZNjgn3KNSMG1famA5K4bV4AdmWEAPYkwmE2JQKK9mW
        EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQV7gOTFO1QlRftWKZA7wKPDO1WjwvtYo8M
        8jyoO6Zu1IwXj9ybCRDZlQ4W2JIHotmVDULZlg8HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACSEO0Ljwrte5IT7ViPC+1kkxTuPZkg7gulPO8FlhjkRb5iXabZlQSZ2JIGotiTCoDZlhFo2ZUOHwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkA3tDo0G7aSPDO0pjgntU40H7ZqNB+2XkA3tfpEQ
        8DyWGN9l0YcyXNqYEU3amBZA2ZcUJdqYFQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJca
        7gaMBe2vjQftW4oB7QCREO0MjgrtM40I7WSOCe19kxPogLpddkLbmhQd2pkZB9mWEQDamBUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJg/UAjQbtfYwE7b2REe0QkRDtAI4J7QCKAO0AkhLtCJEP
        7VGOCfRB25kTANqZGgDdnyYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjQbtAJAN
        7SSLBO3XjAXtjJMT7QuLBO0AjAbtAJcb7gOOCu1hjwvtRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEP7RWOCe15jwzte4sE7dWMBe2rjQjtVY4J7UyOCe18jgntfJEP
        7Q4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRDu0Ojgjte48M
        7WePC+1QjQbtkowG7a2NCO2TkhLtT5QV7QuPCu0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjwztAJkg7QOQDe0qkA7tTJEQ7VOSEO1QkhDtSZAO7WuREO0awXPxAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUFu0AkAztAIoA
        7ACTFO0JkhHtGJEP7SSQDu0dkhPtAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /ADAAAQAwAAEAMAABADAAAQAwAAEAMAABADAAAwA/AAMAPyD/AD8AfwA/AD8APgAfAD4ADwA8Dg8APA8
        PADxADwA8AA8APAAfADwAPwA8AB8APkAfADwADwA8AA8APAAPADxAPwA+OP8APhj/ADwA/wA8Af8APgH
        /AD/B/wA
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>147, 17</value>
  </metadata>
</root>